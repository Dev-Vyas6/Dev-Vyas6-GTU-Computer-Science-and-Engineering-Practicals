8.1 Aim : Write a program to read structure elements from keyboard

#include <stdio.h>

struct book {
  int id;
  char name[20];
  float price;
};

int main(void) {
  struct book b1;
  printf("\n Enter Book Id : ");
  scanf("%d", &b1.id);
  fflush(stdin);
  printf("\n Enter Book Name : ");
  scanf("%[^\n]s", b1.name);
  printf("\n Enter Book Price : ");
  scanf("%f", &b1.price);

  printf("\nBook Id    = %d", b1.id);
  printf("\nBook Name  = %s", b1.name);
  printf("\nBook Price = %.2f", b1.price);
  return 0;
}

8.2 Aim : Define a structure type struct personal that would contain person name, date of
joining and salary using this structure to read this information of 5 people and print the
same on screen.

#include <conio.h>
#include <stdio.h>
struct personal {
  float salary;
  char name[20];
  char doj[100];
} p[5];
int main()
{
  int i;
  for (i = 0; i < 5; i++)
  {
    printf("\nEnter Details of person %d:", i + 1);
    printf("\n------------------------------------------");
    printf("\n\nEnter  name:");
    scanf("%s", p[i].name);
    printf("\nEnter Salary:");
    scanf("%f", &p[i].salary);
    printf("\nEnter Date of joining:");
    scanf("%s", p[i].doj);
  }
  printf("\nThe Data Entered is:\n");
  printf("\n");
  printf("Student_Name\tSalary\t\tDate of joining\t\n");
  printf("------------------------------------------");
  for (i = 0; i < 5; i++)
  {
    printf("\n%s\t\t\t%f\t\t\t%s\t\t\t\n", p[i].name, p[i].salary, p[i].doj);
  }
  getch();
  return 0;
}

8.3 Aim : Define structure data type called time_struct containing three memberâ€™s integer
hour, integer minute and integer second. Develop a program that would assign values to
the individual number and display the time in the following format: 16: 40:51 

#include <stdio.h>

struct time_struct {
  int hour;
  int minute;
  int second;
} t;

int main(void) {
  printf("\n Enter Hour : ");
  scanf("%d", &t.hour);
  printf("\n Enter Minute: ");
  scanf("%d", &t.minute);
  printf("\n Enter Second : ");
  scanf("%d", &t.second);

  printf("\n Time %d:%d:%d", t.hour % 24, t.minute % 60, t.second % 60);

  return 0;
}

8.4 Aim : Define a structure called cricket that will describe the following information:
 
Player name  
 
Team name 
 
Batting average  
Using cricket, declare an array player with 50 elements and write a C program to read the
information about all the 50 players and print team wise list containing names of players
with their batting average. 

#include <stdio.h>
#include <string.h>

struct cricket {
  char player_name[20];
  char team_name[20];
  float batting_avg;
} p[50], t;

int main(void) {
  int i = 0, j = 0, n = 50;

  for (i = 0; i < n; i++) {
    printf("\n Enter Player Name : ");
    scanf("%s", p[i].player_name);
    printf("\n Enter Team Name : ");
    scanf("%s", p[i].team_name);
    printf("\n Enter Batting Average : ");
    scanf("%f", &p[i].batting_avg);
  }

  // Sorting of Data based on Team
  for (i = 0; i < n - 1; i++) {
    for (j = i; j < n; j++) {
      if (strcmp(p[i].team_name, p[j].team_name) > 0) {
        t = p[i];
        p[i] = p[j];
        p[j] = t;
      }
    }
  }
  j = 0;
  for (i = 0; i < n; i++) {
    if (strcmp(p[i].team_name, p[j].team_name) != 0 || i == 0) {
      printf("\n Team Name: %s", p[i].team_name);
      j = i;
    }
    printf("\n Player Name     = %s", p[i].player_name);
    printf("\n Batting Average = %f", p[i].batting_avg);
  }
  return 0;
}

8.5 Aim : Design a structure student record to contain name, branch and total marks
obtained.
Develop a program to read data for 10 students in a class and print them. 

#include <stdio.h>

struct student_record {
  char name[20];
  char branch[20];
  int total_marks;
} p[10];

int main(void) {
  int i = 0, n = 10;

  for (i = 0; i < n; i++) {
    printf("\n Enter Student Name : ");
    scanf("%s", p[i].name);
    printf("\n Enter Students Branch : ");
    scanf("%s", p[i].branch);
    printf("\n Enter Students Marks : ");
    scanf("%d", &p[i].total_marks);
  }

  for (i = 0; i < n; i++) {
    printf("\n Student %d Detail", i + 1);
    printf("\n Name        = %s", p[i].name);
    printf("\n Branch      = %s", p[i].branch);
    printf("\n Total marks = %d", p[i].total_marks);
  }
  return 0;
}
